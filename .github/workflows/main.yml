name: Main testing workflow

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test-run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - python-version: "3.9"
            toxfactor: py39
            ignore-typecheck-outcome: false
          - python-version: "3.10"
            toxfactor: py310
            ignore-typecheck-outcome: false
          - python-version: "3.11"
            toxfactor: py311
            ignore-typecheck-outcome: false
          - python-version: "3.12"
            toxfactor: py312
            ignore-typecheck-outcome: false
          - python-version: "3.13"
            toxfactor: py313
            ignore-typecheck-outcome: false

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      id: setup-python
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        python -m pip install poetry==1.4.0

    - name: Configure poetry
      run: |
        python -m poetry config virtualenvs.in-project true

    - name: Reuse cached virtualenv, if avaialble
      id: poetry-dependencies-cache
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: ${{ runner.os }}-venv-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dev dependencies (unless cached)
      if: steps.poetry-dependencies-cache.outputs.cache-hit != 'true'
      run: |
        python -m poetry install --only=dev

    - name: Run tox
      continue-on-error: ${{ matrix.ignore-typecheck-outcome }}
      run: |
        .venv/bin/tox -f ${{ matrix.toxfactor }} -vvv
